package leetcode;

public class Solution5LC {

	/** LeetCode Problem 5: Longest Palindromic Substring
	 * Given a string S, find the longest palindromic substring in S.
	 * e.g.  the longest substring without repeating letters for "abcabcbb" is "abc", so return 3.
	 * URL: https://leetcode.com/problems/longest-palindromic-substring/
	 * @author Alex
	 *
	 */
		
    public String longestPalindrome(String s) {
    	
    	if (s.length()<=1){
    		return s;
    	}
    	    	
    	//loop through string, comparing longest palindromes generated by palindromebuilder.
    	String longest = s.substring(0,1);
    	String temp = "";
    	for(int i = 0; i < s.length(); i++){
    		temp = palindromebuilder(s,i,i);
			if(temp.length() > longest.length()){
				longest = temp;
			}
        	temp = palindromebuilder(s,i,i+1);
    		if(temp.length() > longest.length()){
    			longest = temp;
    		}
    	}
    	return longest;
    }
    
    //returns longest palindrome around startindex and endindex
    public String palindromebuilder(String s, int startindex, int endindex){
    		 while(startindex >= 0 && endindex <= s.length()-1 && s.charAt(startindex)==s.charAt(endindex)){
    			 startindex--;
    			 endindex++;  
    		 }    			 
    	    	
    	return s.substring(startindex+1,endindex);
    }

}
